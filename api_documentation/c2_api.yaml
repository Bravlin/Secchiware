openapi: '3.0.2'

info:
  title: Secchiware Command and Control Server API
  version: '1.0'
  description: RESTful API expected by a Secchiware Node or Client to communicate with a centralized server

servers:
  - url: '{protocol}://{ip}:{port}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      ip:
        default: '127.0.0.1'
        description: IP configured for the application
      port:
        default: '5000'
        description: Port configured for the application

components:
  schemas:
    EnvironmentPlatformInformation:
      $ref: 'common.yaml#/components/schemas/EnvironmentPlatformInformation'
    HTTPError:
      $ref: 'common.yaml#/components/schemas/HTTPError'
    TestsPackageInfo:
      $ref: 'common.yaml#/components/schemas/TestsPackageInfo'
    TestReport:
      $ref: 'common.yaml#/components/schemas/TestReport'
  parameters:
    environmentIP:
      in: path
      name: ip
      required: true
      schema:
        type: string
        format: ipv4
      description: The ip of a registered environment.
      example: 192.168.0.14
    environmentPort:
      in: path
      name: port
      required: true
      schema:
        type: string
      description: The port of a registered environment.
      example: 5100
    topPackage:
      $ref: 'node_api.yaml#/paths/~1test_sets~1{package}/delete/parameters/0'
  responses:
    400InvalidRequest:
      description: Invalid request
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    401UnauthorizedNode:
      description: Authorization failure
      headers:
        WWW-Authenticate:
          schema:
            type: string
          description: Provides information about the security policy domain associated to the failed request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    401UnauthorizedClient:
      description: Authorization failure
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
        WWW-Authenticate:
          schema:
            type: string
          description: Provides information about the security policy domain associated to the failed request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    404ResourceNotFound:
      description: Resource not found
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    415UnsupportedMediaType:
      description: Format of the request's payload is not supported
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    500InternalServerError:
      description: Something went wrong when handling the request
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    502BadGateway:
      description: Invalid response recieved from requested node
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    504EnvironmentUnresponsive:
      description: The requested environment could not be reached
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
  securitySchemes:
    SecchiwareAuth:
      $ref: 'common.yaml#/components/securitySchemes/SecchiwareAuth'

paths:
  /environments:
    get:
      summary: Lists all currently active environments.
      description: Get information about all currently active environments registered at the C&C server.  
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      session_start:
                        type: string
                        format: date-time
                    required:
                      - session_start
              example:
                192.168.0.14:
                    5100:
                      session_start: 2020-04-02T23:58:44.115677Z
                192.168.0.19:
                    4900:
                      session_start: 2020-04-03T00:02:06.121104Z
    post:
      summary: Endpoint that allows a node to register itself.
      parameters:
        - in: header
          name: Digest
          description: sha256 hash of the request's body
          schema:
            type: string
          example: sha-256=U3dhZ2dlciByb2Nrcw==
          required: true
      security:
        - SecchiwareAuth: [Node]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ip:
                  type: string
                  format: ipv4
                  example: 192.168.0.14
                port:
                  type: string
                  example: 5100
              required:
                - ip
                - port
      responses:
        '204':
          description: Environment registered successfully
        '400':
          description: Invalid request's content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '401':
          $ref: '#/components/responses/401UnauthorizedNode'
        '415':
          description: Format of the request's payload is not supported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
  /environments/{ip}/{port}:
    delete:
      summary: Allows the node at ip:port to unregister itself.
      security:
        - SecchiwareAuth: [Node]
      parameters:
        - $ref: '#/components/parameters/environmentIP'
        - $ref: '#/components/parameters/environmentPort'
      responses:
        '204':
          description: Environment removed successfully
        '401':
          $ref: '#/components/responses/401UnauthorizedNode'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
  /environments/{ip}/{port}/info:
    get:
      summary: Recovers information about the platform of the environment at ip:port.
      parameters:
        - $ref: '#/components/parameters/environmentIP'
        - $ref: '#/components/parameters/environmentPort'
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentPlatformInformation'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
  /environments/{ip}/{port}/installed:
    get:
      summary: Gets all installed root packages in the environment at ip:port
      parameters:
        - $ref: '#/components/parameters/environmentIP'
        - $ref: '#/components/parameters/environmentPort'
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestsPackageInfo'
                uniqueItems: true
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504EnvironmentUnresponsive'
    patch:
      summary: Uploads new packages or updates existing ones to the environment at ip:port.
      parameters:
        - $ref: '#/components/parameters/environmentIP'
        - $ref: '#/components/parameters/environmentPort'
        - in: header
          name: Digest
          description: sha256 hash of the request's body
          schema:
            type: string
          example: sha-256=U3dhZ2dlciByb2Nrcw==
          required: true
      security:
        - SecchiwareAuth: [Client]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
              description: A list of the root packages names to transfer from the C&C server to the specified node.
              example: [some_package, other_package]
      responses:
        '204':
          description: Packages transferred or updated successfully
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '401':
          $ref: '#/components/responses/401UnauthorizedClient'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
        '415':
          $ref: '#/components/responses/415UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504EnvironmentUnresponsive'
  /environments/{ip}/{port}/installed/{package}:
    delete:
      summary: Deletes the specified package installed at the given environment.
      parameters:
        - $ref: '#/components/parameters/environmentIP'
        - $ref: '#/components/parameters/environmentPort'
        - $ref: '#/components/parameters/topPackage'
      security:
        - SecchiwareAuth: [Client]
      responses:
        '204':
          description: Package uninstalled successfully
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
        '401':
          $ref: '#/components/responses/401UnauthorizedClient'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504EnvironmentUnresponsive'
  /environments/{ip}/{port}/report:
    get:
      summary: Executes the specified tests at the given environment and recovers the corresponding report.
      parameters:
        - $ref: '#/components/parameters/environmentIP'
        - $ref: '#/components/parameters/environmentPort'
        - $ref: 'node_api.yaml#/paths/~1report/get/parameters/0'
        - $ref: 'node_api.yaml#/paths/~1report/get/parameters/1'
        - $ref: 'node_api.yaml#/paths/~1report/get/parameters/2'
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestReport'
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504EnvironmentUnresponsive'
  /test_sets:
    get:
      summary: Gets all root packages at the C&C server's repository.
      description: Returns a list of recursive informative representations of all available packages.
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
          content:
            application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/TestsPackageInfo'
                  uniqueItems: true
    patch:
      summary: Uploads new packages to the repository or updates existing ones.
      description: Endpoint to upload packages from a compressed file.
      parameters:
        - in: header
          name: Digest
          description: sha256 hash of the request's body
          schema:
            type: string
          example: sha-256=U3dhZ2dlciByb2Nrcw==
          required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                packages:
                  type: string
                  format: binary
                  description: File in tar.gz format
              required:
                - packages
      security:
        - SecchiwareAuth: [Client]
      responses:
        '204':
          description: File correctly uncompressed and packages added or updated accordingly
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '401':
          $ref: '#/components/responses/401UnauthorizedClient'
        '415':
          $ref: '#/components/responses/415UnsupportedMediaType'
  /test_sets/{package}:
    delete:
      summary: Deletes a package
      description: Removes the given root package (including all its content) from the repository.
      parameters:
        - $ref: '#/components/parameters/topPackage'
      security:
        - SecchiwareAuth: [Client]
      responses:
        '204':
          description: Package deleted successfully
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
        '401':
          $ref: '#/components/responses/401UnauthorizedClient'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
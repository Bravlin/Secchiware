openapi: '3.0.2'

info:
  title: Secchiware Command and Control Server API
  version: '1.0'
  description: RESTful API expected by a Secchiware Node or Client to communicate with a centralized server

servers:
  - url: '{protocol}://{ip}:{port}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      ip:
        default: '127.0.0.1'
        description: IP configured for the application
      port:
        default: '5000'
        description: Port configured for the application

components:
  schemas:
    EnvironmentPlatformInformation:
      type: object
      properties:
        platform:
          type: string
        node:
          type: string
        os:
          type: object
          properties:
            system:
              type: string
            release:
              type: string
            version:
              type: string
          required:
            - system
            - release
            - version
        hardware:
          type: object
          properties:
            machine:
              type: string
            processor:
              type: string
          required:
            - machine
            - processor
        python:
          type: object
          properties:
            build:
              type: array
              minLength: 2
              maxLength: 2
              items:
                type: string
            compiler:
              type: string
            implementation:
              type: string
            version:
              type: string
          required:
            - buid
            - compiler
            - implementation
            - version
      required:
        - platform
        - node
        - os
        - hardware
        - python
      example:
        platform: Linux-3.13.0-55-generic-x86_64-with-Ubuntu-14.04-trusty
        node: MyMachine
        os:
          system: Linux
          release: 3.13.0-55-generic
          version: '#94-Ubuntu SMP Thu Jun 18 00:27:10 UTC 2015'
        hardware:
          machine: x86_64
          processor: x86_64
        python:
          build:
            - default
            - Nov  7 2018 10:44:02
          compiler: GCC 8.3.0
          implementation: CPython
          version: 3.6.9
    HTTPError:
      $ref: 'common.yaml#/components/schemas/HTTPError'
    TestsPackageInfo:
      $ref: 'common.yaml#/components/schemas/TestsPackageInfo'
    TestReport:
      $ref: 'common.yaml#/components/schemas/TestReport'
  parameters:
    arrange:
      in: query
      name: arrange
      required: false
      schema:
        type: string
        enum: [asc, desc]
      description: > 
        Used to specify wheter the results must be ordered in ascending or descending order.
        This paramater is only valid if the parameter `order_by` is present.
        If `order_by` is present and this parameter is omitted, the default arrengement is in ascending order.
    environmentIP:
      in: path
      name: ip
      required: true
      schema:
        type: string
        format: ipv4
      description: The ip of a registered environment.
      example: 192.168.0.14
    environmentPort:
      in: path
      name: port
      required: true
      schema:
        type: string
      description: The port of a registered environment.
      example: 5100
    limit:
      in: query
      name: limit
      required: false
      schema:
        type: integer
      description: The max number of instances of the requested resource to be returned by the search.
      example: 10
    sessionID:
      in: path
      name: session_id
      required: true
      schema:
        type: integer
      description: The id of a stored session.
      example: 7
    topPackage:
      $ref: 'node_api.yaml#/paths/~1test_sets~1{package}/delete/parameters/0'
  responses:
    400InvalidRequest:
      description: Invalid request
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    401UnauthorizedNode:
      description: Authorization failure
      headers:
        WWW-Authenticate:
          schema:
            type: string
          description: Provides information about the security policy domain associated to the failed request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    401UnauthorizedClient:
      description: Authorization failure
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
        WWW-Authenticate:
          schema:
            type: string
          description: Provides information about the security policy domain associated to the failed request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    404ResourceNotFound:
      description: Resource not found
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    415UnsupportedMediaType:
      description: Format of the request's payload is not supported
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    500InternalServerError:
      description: Something went wrong when handling the request
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    502BadGateway:
      description: Invalid response recieved from requested node
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    504EnvironmentUnresponsive:
      description: The requested environment could not be reached
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: Provides cross origin access to the specified domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
  securitySchemes:
    SecchiwareAuth:
      $ref: 'common.yaml#/components/securitySchemes/SecchiwareAuth'

paths:
  /environments:
    get:
      summary: Lists all currently active environments.
      description: Get information about all currently active environments registered at the C&C server.  
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      session_id:
                        type: integer
                      session_start:
                        type: string
                        format: date-time
                    required:
                      - session_id
                      - session_start
              example:
                192.168.0.14:
                    5100:
                      session_id: 1
                      session_start: 2020-04-02T23:58:44Z
                192.168.0.19:
                    4900:
                      session_id: 2
                      session_start: 2020-04-03T00:02:06Z
    post:
      summary: Endpoint that allows a node to register itself.
      parameters:
        - in: header
          name: Digest
          description: sha256 hash of the request's body
          schema:
            type: string
          example: sha-256=U3dhZ2dlciByb2Nrcw==
          required: true
      security:
        - SecchiwareAuth: [Node]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ip:
                  type: string
                  format: ipv4
                  example: 192.168.0.14
                port:
                  type: string
                  example: 5100
                platform_info:
                  $ref: '#components/schemas/EnvironmentPlatformInformation'
              required:
                - ip
                - port
                - platform_info
      responses:
        '204':
          description: Environment registered successfully
        '400':
          description: Invalid request's content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '401':
          $ref: '#/components/responses/401UnauthorizedNode'
        '415':
          description: Format of the request's payload is not supported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
  /environments/{ip}/{port}:
    delete:
      summary: Allows the node at ip:port to unregister itself.
      security:
        - SecchiwareAuth: [Node]
      parameters:
        - $ref: '#/components/parameters/environmentIP'
        - $ref: '#/components/parameters/environmentPort'
      responses:
        '204':
          description: Environment removed successfully
        '401':
          $ref: '#/components/responses/401UnauthorizedNode'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
  /environments/{ip}/{port}/info:
    get:
      summary: Recovers information about the platform of the environment at ip:port.
      parameters:
        - $ref: '#/components/parameters/environmentIP'
        - $ref: '#/components/parameters/environmentPort'
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentPlatformInformation'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
  /environments/{ip}/{port}/installed:
    get:
      summary: Gets all installed root packages in the environment at ip:port
      parameters:
        - $ref: '#/components/parameters/environmentIP'
        - $ref: '#/components/parameters/environmentPort'
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestsPackageInfo'
                uniqueItems: true
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504EnvironmentUnresponsive'
    patch:
      summary: Uploads new packages or updates existing ones to the environment at ip:port.
      parameters:
        - $ref: '#/components/parameters/environmentIP'
        - $ref: '#/components/parameters/environmentPort'
        - in: header
          name: Digest
          description: sha256 hash of the request's body
          schema:
            type: string
          example: sha-256=U3dhZ2dlciByb2Nrcw==
          required: true
      security:
        - SecchiwareAuth: [Client]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
              description: A list of the root packages names to transfer from the C&C server to the specified node.
              example: [some_package, other_package]
      responses:
        '204':
          description: Packages transferred or updated successfully
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '401':
          $ref: '#/components/responses/401UnauthorizedClient'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
        '415':
          $ref: '#/components/responses/415UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504EnvironmentUnresponsive'
  /environments/{ip}/{port}/installed/{package}:
    delete:
      summary: Deletes the specified package installed at the given environment.
      parameters:
        - $ref: '#/components/parameters/environmentIP'
        - $ref: '#/components/parameters/environmentPort'
        - $ref: '#/components/parameters/topPackage'
      security:
        - SecchiwareAuth: [Client]
      responses:
        '204':
          description: Package uninstalled successfully
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
        '401':
          $ref: '#/components/responses/401UnauthorizedClient'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504EnvironmentUnresponsive'
  /environments/{ip}/{port}/reports:
    get:
      summary: Executes the specified tests at the given environment and recovers the corresponding report.
      parameters:
        - $ref: '#/components/parameters/environmentIP'
        - $ref: '#/components/parameters/environmentPort'
        - $ref: 'node_api.yaml#/paths/~1reports/get/parameters/0'
        - $ref: 'node_api.yaml#/paths/~1reports/get/parameters/1'
        - $ref: 'node_api.yaml#/paths/~1reports/get/parameters/2'
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestReport'
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504EnvironmentUnresponsive'
  /executions:
    get:
      summary: Searches for executions that match the given criteria.
      parameters:
        - in: query
          name: ids
          required: false
          schema:
            type: array
            items:
              type: integer
          description: The ids of specific executions to filter by separated by commas.
          style: form
          explode: false
          examples:
            singleID:
              value: [1]
              summary: A given single ID
            someIDs:
              value: [1, 2, 3]
              summary: A given list of ids
        - in: query
          name: sessions
          required: false
          schema:
            type: array
            items:
              type: integer
          description: >
            Allows to specify to which sessions the executions must belong to by their ids.
            To specify more than one session commas must be place between ids.
          style: form
          explode: false
          examples:
            singleSession:
              value: [1]
              summary: A given single session
            someSessions:
              value: [1, 2, 3]
              summary: A given list of sessions
        - in: query
          name: registered_from
          required: false
          schema:
            type: string
            format: date-time
          description: Filters executions by specifying the oldest registration date allowed.
          style: form
          allowReserved: true
          example: 2020-02-02T02:02:02Z
        - in: query
          name: registered_to
          required: false
          schema:
            type: string
            format: date-time
          description: Filters executions by specifying the most recent registration date allowed.
          style: form
          allowReserved: true
          example: 2020-04-04T04:04:04Z
        - in: query
          name: order_by
          required: false
          schema:
            type: string
            enum:
              - id
              - session
              - registered
          description: >
            Sorts the data by the specified parameter.
            Accepted fields:
              * `id` - Sorts by execution id
              * `session` - Sorts by session id
              * `registered` - Sorts by time of registration
          style: form
        - $ref: '#/components/parameters/arrange'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    execution_id:
                      type: integer
                      example: 32
                    session_id:
                      type: integer
                      example: 14
                    timestamp_registered:
                      type: string
                      format: date-time
                      example: 2020-03-03T15:15:15Z
                    reports:
                      type: array
                      items:
                        $ref: '#/components/schemas/TestReport'
                  required:
                    - execution_id
                    - session_id
                    - timestamp_registered
        '400':
          $ref: '#/components/responses/400InvalidRequest'
  /executions/{execution_id}:
    delete:
      summary: Deletes the specified execution and all its associated tests reports.
      parameters:
        - in: path
          name: execution_id
          required: true
          schema:
            type: integer
          description: The id of a stored execution.
          example: 5
      security:
        - SecchiwareAuth: [Client]
      responses:
        '204':
          description: Execution deleted successfully
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
        '401':
          $ref: '#/components/responses/401UnauthorizedClient'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
  /sessions:
    get:
      summary: Searches for sessions that match the given criteria.
      parameters:
        - in: query
          name: ids
          required: false
          schema:
            type: array
            items:
              type: integer
          description: The ids of specific sessions to filter by, separated by commas.
          style: form
          explode: false
          examples:
            singleID:
              value: [1]
              summary: A given single ID
            someIDs:
              value: [1, 2, 3]
              summary: A given list of ids
        - in: query
          name: start_from
          required: false
          schema:
            type: string
            format: date-time
          description: Filters sessions by specifying the oldest start date allowed.
          style: form
          explode: false
          allowReserved: true
          example: 2020-02-02T02:02:02Z
        - in: query
          name: start_to
          required: false
          schema:
            type: string
            format: date-time
          description: Filters sessions by specifying the most recent start date allowed.
          style: form
          allowReserved: true
          example: 2020-04-04T04:04:04Z
        - in: query
          name: end_from
          required: false
          schema:
            type: string
            format: date-time
          description: Filters sessions by specifying the oldest end date allowed.
          style: form
          allowReserved: true
          example: 2020-02-02T02:02:02Z
        - in: query
          name: end_to
          required: false
          schema:
            type: string
            format: date-time
          description: Filters sessions by specifying the most recent end date allowed.
          style: form
          explode: false
          allowReserved: true
          example: 2020-04-04T04:04:04Z
        - in: query
          name: ips
          required: false
          schema:
            type: array
            items:
              type: string
              format: ip
          description: The specific IPs of the sessions to filter by, separated by commas.
          style: form
          explode: false
          examples:
            singleIP:
              value: [192.168.0.8]
              description: A given single IP
            multipleIPs:
              value: [192.168.0.8, 192.168.0.2, 192.168.0.4]
              description: A list of IPs separated by commas
        - in: query
          name: ports
          required: false
          schema:
            type: array
            items:
              type: integer
          description: The specific ports of the sessions to filter by, separated by commas.
          style: form
          explode: false
          examples:
            singlePort:
              value: [4000]
              description: A given single port
            multiplePorts:
              value: [4000, 5000, 6000]
              description: A list of ports separated by commas
        - in: query
          name: systems
          required: false
          schema:
            type: array
            items:
              type: string
          description: Filters session by specifying their corresponding operating system.
          style: form
          explode: false
          allowReserved: true
          examples:
            singleSystem:
              value: [Linux]
              description: A given single system
            multipleSystems:
              value: [Linux, Windows]
              description: A list of systems separated by commas
        - in: query
          name: order_by
          required: false
          schema:
            type: string
            enum:
              - id
              - start
              - end
              - ip
              - port
              - system
          description: >
            Sorts the data by the specified parameter.
            Accepted fields:
              * `id` - Sorts by session id
              * `start` - Sorts by session start timestamp
              * `end` - Sorts by session end timestamp
              * `ip` - Sorts by session IP
              * `port` - Sorts by session port
              * `system` - Sorts by operating system associated to the session
          style: form
        - $ref: '#/components/parameters/arrange'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    session_id:
                      type: integer
                      example: 40
                    session_start:
                      type: string
                      format: date-time
                      example: 2020-01-01T01:01:01Z
                    session_end:
                      type: string
                      format: date-time
                      example: 2020-01-01T02:02:02Z
                    ip:
                      type: string
                      format: ip
                      example: 192.168.0.14
                    port:
                      type: integer
                      example: 4900
                    platform_os_system:
                      type: string
                      example: Linux
                  required:
                    - session_id
                    - session_start
                    - ip
                    - port
                    - platform_os_system
        '400':
          $ref: '#/components/responses/400InvalidRequest'
  /sessions/{session_id}:
    get:
      summary: Recovers the information about the specified session.
      parameters:
        - $ref: '#/components/parameters/sessionID'
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: integer
                    example: 11
                  session_start:
                    type: string
                    format: date-time
                    example: 2020-04-02T16:20:00Z
                  session_end:
                    type: string
                    format: date-time
                    example: 2020-04-02T17:20:00Z
                  ip:
                    type: string
                    example: 192.167.0.8
                  port:
                    type: integer
                    example: 4500
                  platform_info:
                    $ref: '#/components/schemas/EnvironmentPlatformInformation'
                  total_executions:
                    type: integer
                    example: 4
                required:
                  - session_id
                  - session_start
                  - ip
                  - port
                  - platform_info
                  - total_executions
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
    delete:
      summary: Deletes the specified session and all its associated executions and tests reports.
      description: Only finished session are allowed.
      parameters:
        - $ref: '#/components/parameters/sessionID'
      security:
        - SecchiwareAuth: [Client]
      responses:
        '204':
          description: Session deleted successfully
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '401':
          $ref: '#/components/responses/401UnauthorizedClient'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'
  /test_sets:
    get:
      summary: Gets all root packages at the C&C server's repository.
      description: Returns a list of recursive informative representations of all available packages.
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
          content:
            application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/TestsPackageInfo'
                  uniqueItems: true
    patch:
      summary: Uploads new packages to the repository or updates existing ones.
      description: Endpoint to upload packages from a compressed file.
      parameters:
        - in: header
          name: Digest
          description: sha256 hash of the request's body
          schema:
            type: string
          example: sha-256=U3dhZ2dlciByb2Nrcw==
          required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                packages:
                  type: string
                  format: binary
                  description: File in tar.gz format
              required:
                - packages
      security:
        - SecchiwareAuth: [Client]
      responses:
        '204':
          description: File correctly uncompressed and packages added or updated accordingly
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '401':
          $ref: '#/components/responses/401UnauthorizedClient'
        '415':
          $ref: '#/components/responses/415UnsupportedMediaType'
  /test_sets/{package}:
    delete:
      summary: Deletes a package
      description: Removes the given root package (including all its content) from the repository.
      parameters:
        - $ref: '#/components/parameters/topPackage'
      security:
        - SecchiwareAuth: [Client]
      responses:
        '204':
          description: Package deleted successfully
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Provides cross origin access to the specified domain
        '401':
          $ref: '#/components/responses/401UnauthorizedClient'
        '404':
          $ref: '#/components/responses/404ResourceNotFound'